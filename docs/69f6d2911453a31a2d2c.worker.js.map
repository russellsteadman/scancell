{"version":3,"sources":["../webpack/bootstrap","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/Util.worker.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_defineProperty","obj","configurable","writable","imageArray","imageWidth","imageHeight","avgGray","cellArray","config","wall","res","thresh","mDist","mCont","emitStatus","percent","error","postMessage","action","pass","pointInPoly","point","vs","x","y","inside","j","length","getRange","x1","y1","x2","y2","xLen","Math","abs","xStart","yLen","yStart","range","Uint8ClampedArray","getContrast","wCells","ceil","cidx","floor","getAverage","DestroyAround","Detect","points","fMatrix","sum","divisor","hCells","u","round","calcAvgGray","Uint8Array","arrayCopy","set","sideLengths","map","p1","idx","p2","pow","sideMargin","reduce","a","b","data","height","width","DiamondCoords","distance","coords","Number","push","MaxDiamond","internalPoints","deltaPoints","detectedPoints","onmessage","_ref2","console","log","_ref","avg","Serialize","newImage","Rectangulate","count","arrayCopyTwo","DiamondCount","target","arguments","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","_objectSpread","e"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,qBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,kBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,IAIAlC,IAAAmC,EAAA,kCClFe,SAAAC,EAAAC,EAAAV,EAAAN,GAYf,OAXAM,KAAAU,EACAvB,OAAAC,eAAAsB,EAAAV,EAAA,CACAN,QACAL,YAAA,EACAsB,cAAA,EACAC,UAAA,IAGAF,EAAAV,GAAAN,EAGAgB,ECZA,IAAIG,EAAYC,EAAYC,EAAaC,EAASC,SAElD,IAAIC,EAAS,CACTC,KAAM,IACNC,IAAK,GACLC,OAAQ,GACRC,MAAO,EACPC,MAAO,GAGLC,EAAa,SAACC,EAASC,GACzBC,YAAY,CACRC,OAAQ,SACRC,KAAM,CACFH,QAASA,EACTD,cAKNK,EAAc,SAACC,EAAOC,GAIxB,IAHA,IAAMC,EAAIF,EAAM,GAAIG,EAAIH,EAAM,GAE1BI,GAAS,EACJ1D,EAAI,EAAG2D,EAAIJ,EAAGK,OAAS,EAAG5D,EAAIuD,EAAGK,OAAQD,EAAI3D,IAC5CuD,EAAGvD,GAAG,GAAKyD,IAAQF,EAAGI,GAAG,GAAKF,GAAQD,GAAKD,EAAGI,GAAG,GAAKJ,EAAGvD,GAAG,KAAOyD,EAAIF,EAAGvD,GAAG,KAAOuD,EAAGI,GAAG,GAAKJ,EAAGvD,GAAG,IAAMuD,EAAGvD,GAAG,KAAK0D,GAAUA,GAG1I,OAAOA,GAULG,EAAW,SAACC,EAAIC,EAAIC,EAAIC,GAQ1B,IAPA,IAAIC,EAAOC,KAAKC,IAAIJ,EAAKF,GAAM,EAC3BO,EAASP,EAAKE,EAAKA,EAAKF,EACxBQ,EAAOH,KAAKC,IAAIH,EAAKF,GAAM,EAC3BQ,EAASR,EAAKE,EAAKA,EAAKF,EAExBS,EAAQ,IAAIC,kBAAkBP,EAAOI,GAEhC7D,EAAI,EAAGA,EAAI6D,EAAM7D,IACtB,IAAK,IAAIT,EAAI,EAAGA,EAAIkE,EAAMlE,IACtBwE,EAAM/D,EAAIyD,EAAOlE,GAAKoC,GAAYmC,EAAS9D,GAAK4B,EAAa,EAAmB,GAAdgC,EAASrE,IAInF,OAAOwE,GAiCLE,EAAc,SAAC1E,GAAD,OAAQoC,EAAWpC,GAPpB,SAACA,GAChB,IAAI2E,EAASR,KAAKS,KAAKvC,EAAaI,EAAOE,KACvCkC,EAAOV,KAAKW,OAAO9E,EAAIA,EAAIqC,GAAcA,EAAaI,EAAOE,KAAOgC,EAASR,KAAKW,MAAM9E,EAAIqC,EAAaI,EAAOE,KAEpH,OAAOJ,EAAQsC,GAGyBE,CAAW/E,EAAI,IAoDrDgF,EAAgB,SAAhBA,EAAiBhF,GACE,IAAjBwC,EAAUxC,KACVwC,EAAUxC,GAAK,EACU,IAArBwC,EAAUxC,EAAI,IACdgF,EAAchF,EAAI,GAEG,IAArBwC,EAAUxC,EAAI,IACdgF,EAAchF,EAAI,GAEY,IAA9BwC,EAAUxC,EAAIqC,IACd2C,EAAchF,EAAIqC,GAEY,IAA9BG,EAAUxC,EAAIqC,IACd2C,EAAchF,EAAIqC,KAKxB4C,EAAS,SAACC,IApGI,WAChB,IACIC,EAASC,EAAKC,EADZC,EAASnB,KAAKS,KAAKtC,EAAcG,EAAOE,KAAMgC,EAASR,KAAKS,KAAKvC,EAAaI,EAAOE,KAE3FJ,EAAU,IAAIkC,kBAAkBa,EAASX,GAEzC,IAAK,IAAI3E,EAAI,EAAGA,EAAIuC,EAAQqB,OAAQ5D,IAAK,CACrC,IAAIwD,EAAKxD,EAAI2E,EAAUlC,EAAOE,IAAKc,GAAKzD,EAAIA,EAAI2E,GAAUA,EAASlC,EAAOE,IAM1E,IAAK,IAAI4C,KAHTH,EAAM,EACNC,EAAU,EAHVF,EAAUtB,EAASL,EAAGC,EAAGD,EAAIf,EAAOE,IAAM,EAAGc,EAAIhB,EAAOE,IAAM,GAMhC,qBAAfwC,EAAQI,KACfH,GAAOD,EAAQI,GACfF,KAIR9C,EAAQvC,GAAKmE,KAAKqB,MAAMJ,EAAMC,IAkFlCI,GAEA1C,EAAW,IAEXP,EAAY,IAAIkD,WAAWtD,EAAWwB,OAAS,GAC/C,IAAI+B,EAAY,IAAIlB,kBAAkBrC,EAAWwB,QACjD+B,EAAUC,IAAIxD,GAEd,IAAK,IAAIpC,EAAI,EAAGA,EAAIoC,EAAWwB,OAAQ5D,GAAK,EAAG,CAC3C,IAAIwD,EAAKxD,GAAK,EAAIqC,GAAe,EAC7BoB,GAAKzD,EAAI,EAAIwD,GAAKnB,EAAa,EAE/BrC,EAAI,MAAU,GAAG+C,EAAW,GAAM/C,EAAIoC,EAAWwB,OAAS,IAE1DP,EAAY,CAACG,EAAGC,GAAIyB,IAAWR,EAAY1E,KAAO,EAAIyC,EAAOK,MAC7DN,EAAUxC,EAAI,GAAK,EAEnBwC,EAAUxC,EAAI,GAAK,EAM3B,IAAI6F,EAAcX,EAAOY,IAAI,SAACC,EAAIC,GAC9B,IAAIC,EAAa,IAARD,EAAYd,EAAO,GAAKA,EAAOc,EAAM,GAC9C,OAAO7B,KAAK+B,IAAI/B,KAAK+B,IAAIH,EAAG,GAAKE,EAAG,GAAI,GAAK9B,KAAK+B,IAAIH,EAAG,GAAKE,EAAG,GAAI,GAAI,MAGzEE,EAAahC,KAAKqB,MAAMK,EAAYO,OAAO,SAACC,EAAGC,GAE/C,OADIA,EAAID,IAAGA,EAAIC,GACRD,GACRR,EAAY,IAAMpD,EAAOC,MAE5B,IAAK,IAAI1C,KAAKwC,EAAW,CACrB,IAAIgB,EAAIxD,EAAIqC,EACRoB,GAAKzD,EAAIwD,GAAKnB,EAEdrC,EAAI,MAAU,GAAG+C,EAAW,KAAQ/C,EAAIwC,EAAUoB,OAAS,KAG3DP,EAAY,CAACG,EAAGC,GAAIyB,IAClB7B,EAAY,CAACG,EAAGC,EAAI0C,GAAajB,IAC/B7B,EAAY,CAACG,EAAGC,EAAI0C,GAAajB,IACjC7B,EAAY,CAACG,EAAI2C,EAAY1C,GAAIyB,IACjC7B,EAAY,CAACG,EAAI2C,EAAY1C,GAAIyB,IAErCF,EAAchF,GAItB,IAAK,IAAIA,KAAKwC,EACNxC,EAAI,MAAW,GAAG+C,EAAW,KAAQ/C,EAAIwC,EAAUoB,OAAS,MAE3C,IAAjBpB,EAAUxC,KACVoC,EAAe,EAAJpC,GAAS,IACpBoC,EAAe,EAAJpC,EAAQ,GAAK,GACxBoC,EAAe,EAAJpC,EAAQ,GAAK,IAIhCkD,YAAY,CACRC,OAAQ,WACRC,KAAM,CACFmD,KAAMnE,EACNoE,OAAQlE,EACRmE,MAAOpE,KAIfD,EAAWwD,IAAID,IAGbe,EAAgB,SAAC1G,EAAG2G,GACtB,IAAIC,EAAS,GACb5G,EAAI6G,OAAO7G,GACX,IAAK,IAAIS,GAAKkG,EAAUlG,GAAKkG,EAAUlG,IACnC,IAAK,IAAI8E,GAAKoB,EAAUpB,GAAKoB,EAAUpB,IAC/BpB,KAAKC,IAAI3D,GAAK0D,KAAKC,IAAImB,IAAMoB,GAC7BC,EAAOE,KAAK9G,EAAIS,EAAI4B,EAAakD,GAI7C,OAAOqB,GAILG,EAAa,SAAbA,EAAc/G,EAAG2G,GACdA,IAAUA,EAAW,GAC1B3G,EAAI6G,OAAO7G,GACX,IAAI4G,EAASF,EAAc1G,EAAG2G,GAE1BK,EAAiB,EAAI7C,KAAK+B,IAAIS,EAAU,GAAK,EAAIA,EAAW,EAC5DM,EAAc,EAAIN,EAElBO,EAAiB,EAErB,IAAK,IAAIb,KAAKO,EAC0B,kBAAzBpE,EAAUoE,EAAOP,KAA6C,IAAzB7D,EAAUoE,EAAOP,KAC7Da,IAIR,OAAKA,EAAiBF,GAAgBC,GAAexE,EAAOG,OAAemE,EAAW/G,EAAG2G,EAAW,GAC7FA,GA8CXQ,UAAY,SAAAC,GAAY,IAAVb,EAAUa,EAAVb,KACVc,QAAQC,IAAI,kBAAmBf,EAAKpD,QACpC,IACwB,cAAhBoD,EAAKpD,OA7NC,SAAAoE,GAA2B,IAAzBhB,EAAyBgB,EAAzBhB,KAAMC,EAAmBe,EAAnBf,OAAQC,EAAWc,EAAXd,MAC9BrE,EAAa,IAAIqC,kBAAkB8B,EAAK3C,QACxCvB,EAAaoE,EACbnE,EAAckE,EAGd,IAAK,IAAIxG,EAAI,EAAGA,EAAIuG,EAAK3C,OAAQ5D,GAAK,EAAG,CACrC,IAAIwH,EAAMrD,KAAKqB,OAAOe,EAAKvG,GAAKuG,EAAKvG,EAAI,GAAKuG,EAAKvG,EAAI,IAAI,GAE3DoC,EAAWpC,GAAKwH,EAChBpF,EAAWpC,EAAI,GAAKwH,EACpBpF,EAAWpC,EAAI,GAAKwH,EACpBpF,EAAWpC,EAAI,GAAK,IAGxBkD,YAAY,CACRC,OAAQ,aACRC,KAAM,CACFmD,KAAMnE,EACNoE,OAAQA,EACRC,MAAOA,KA0MPgB,CAAUlB,EAAKnD,MACQ,iBAAhBmD,EAAKpD,OAtMH,SAAC+B,GAClB,IAAIwC,EAAW,IAAIjD,kBAAkBrC,EAAWwB,QAChD8D,EAAS9B,IAAIxD,GAEb,IAAK,IAAIpC,EAAI,EAAGA,EAAI0H,EAAS9D,OAAQ5D,GAAK,EAAG,CACzC,IAAIwD,EAAKxD,GAAK,EAAIqC,GAAe,EAG5BgB,EAAY,CAACG,GAFTxD,EAAI,EAAIwD,GAAKnB,EAAa,GAEV6C,KACrBwC,EAAS1H,GAAK,EACd0H,EAAS1H,EAAI,GAAK,EAClB0H,EAAS1H,EAAI,GAAK,GAI1BkD,YAAY,CACRC,OAAQ,gBACRC,KAAM,CACFmD,KAAMmB,EACNlB,OAAQlE,EACRmE,MAAOpE,KAmLPsF,CAAapB,EAAKnD,MACK,WAAhBmD,EAAKpD,OACZ8B,EAAOsB,EAAKnD,MACW,UAAhBmD,EAAKpD,OApDH,SAAC+B,GAClB,IAAI0C,EAAQ,EAERjC,EAAY,IAAID,WAAWlD,EAAUoB,QACzC+B,EAAUC,IAAIpD,GACd,IAAIqF,EAAe,IAAInC,WAAWtD,EAAWwB,QAG7C,IAAK,IAAI5D,KAFT6H,EAAajC,IAAIxD,GAEHI,EAEV,GADAxC,EAAI6G,OAAO7G,GACU,IAAjBwC,EAAUxC,GAAU,CACpB,IAAI2G,EAAWI,EAAW/G,EAAG,GAC7B,GAAI2G,GAAYlE,EAAOI,MAAO,CAC1B+E,IACA,IAAIhB,EAASF,EAAc1G,EAAG2G,GAC9B,IAAK,IAAIlG,KAAKmG,EACVpE,EAAUoE,EAAOnG,IAAM,EAE3B2B,EAAa,EAAFpC,GAAO,EAClBoC,EAAa,EAAFpC,EAAM,GAAK,EACtBoC,EAAa,EAAFpC,EAAM,GAAK,EACtBoC,EAAa,EAAFpC,EAAM,GAAK,IACtBoC,EAAa,EAAFpC,EAAM,GAAK,IACtBoC,EAAa,EAAFpC,EAAM,GAAK,GAKlCwC,EAAUoD,IAAID,GAEdzC,YAAY,CACRC,OAAQ,UACRC,KAAM,CACFmD,KAAMnE,EACNoE,OAAQlE,EACRmE,MAAOpE,EACPuF,WAIRxF,EAAWwD,IAAIiC,GAaPC,CAAavB,EAAKnD,MACK,WAAhBmD,EAAKpD,QACZV,EC5TG,SAAAsF,GACf,QAAA/H,EAAA,EAAiBA,EAAAgI,UAAApE,OAAsB5D,IAAA,CACvC,IAAAiI,EAAA,MAAAD,UAAAhI,GAAAgI,UAAAhI,GAAA,GACAkI,EAAAxH,OAAAyH,KAAAF,GAEA,oBAAAvH,OAAA0H,wBACAF,IAAAG,OAAA3H,OAAA0H,sBAAAH,GAAAK,OAAA,SAAAC,GACA,OAAA7H,OAAA8H,yBAAAP,EAAAM,GAAA3H,eAIAsH,EAAAO,QAAA,SAAAlH,GACMS,EAAc+F,EAAAxG,EAAA0G,EAAA1G,MAIpB,OAAAwG,ED4SkBW,CAAA,GAAOjG,EAAW8D,EAAKnD,MAC7BiE,QAAQC,IAAI,UAAW7E,IACA,SAAhB8D,EAAKpD,QACZD,YAAY,CACRC,OAAQ,aACRC,KAAM,CACFmD,KAAMnE,EACNoE,OAAQlE,EACRmE,MAAOpE,KAIrB,MAAOsG,GACLtB,QAAQpE,MAAM0F,GACd5F,EAAW,GAAG,GAElBsE,QAAQC,IAAI,mBAAoBf,EAAKpD","file":"69f6d2911453a31a2d2c.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","let imageArray, imageWidth, imageHeight, avgGray, cellArray;\r\n\r\nlet config = {\r\n    wall: 0.06,\r\n    res: 10,\r\n    thresh: 0.5,\r\n    mDist: 3,\r\n    mCont: 3,\r\n};\r\n\r\nconst emitStatus = (percent, error) => {\r\n    postMessage({\r\n        action: 'status',\r\n        pass: {\r\n            error: !!error,\r\n            percent\r\n        }\r\n    });\r\n};\r\n\r\nconst pointInPoly = (point, vs) => {\r\n    const x = point[0], y = point[1];\r\n\r\n    let inside = false;\r\n    for (let i = 0, j = vs.length - 1; i < vs.length; j = i++) {\r\n        if (((vs[i][1] > y) !== (vs[j][1] > y)) && (x < (vs[j][0] - vs[i][0]) * (y - vs[i][1]) / (vs[j][1] - vs[i][1]) + vs[i][0])) inside = !inside;\r\n    }\r\n\r\n    return inside;\r\n};\r\n\r\n/*\r\n    Get range returns ranges rtl then ttb\r\n    ex.\r\n    a b\r\n    c d\r\n    becomes [a, b, c, d]\r\n*/\r\nconst getRange = (x1, y1, x2, y2) => {\r\n    let xLen = Math.abs(x2 - x1) + 1;\r\n    let xStart = x1 > x2 ? x2 : x1;\r\n    let yLen = Math.abs(y2 - y1) + 1;\r\n    let yStart = y1 > y2 ? y2 : y1;\r\n\r\n    let range = new Uint8ClampedArray(xLen * yLen);\r\n\r\n    for (let o = 0; o < yLen; o++) {\r\n        for (let i = 0; i < xLen; i++) {\r\n            range[o * xLen + i] = imageArray[(yStart + o) * imageWidth * 4 + (xStart + i) * 4];\r\n        }\r\n    }\r\n    \r\n    return range;\r\n};\r\n\r\nconst calcAvgGray = () => {\r\n    const hCells = Math.ceil(imageHeight / config.res), wCells = Math.ceil(imageWidth / config.res);\r\n    let fMatrix, sum, divisor;\r\n    avgGray = new Uint8ClampedArray(hCells * wCells);\r\n\r\n    for (let i = 0; i < avgGray.length; i++) {\r\n        let x = (i % wCells) * config.res, y = (i - i % wCells) / wCells * config.res;\r\n        fMatrix = getRange(x, y, x + config.res - 1, y + config.res - 1);\r\n\r\n        sum = 0;\r\n        divisor = 0;\r\n\r\n        for (let u in fMatrix) {\r\n            if (typeof fMatrix[u] !== 'undefined') {\r\n                sum += fMatrix[u];\r\n                divisor++;\r\n            }\r\n        }\r\n            \r\n        avgGray[i] = Math.round(sum / divisor);\r\n    }\r\n};\r\n\r\nconst getAverage = (i) => {\r\n    let wCells = Math.ceil(imageWidth / config.res);\r\n    let cidx = Math.floor((i - i % imageWidth) / imageWidth / config.res) * wCells + Math.floor(i % imageWidth / config.res);\r\n\r\n    return avgGray[cidx];\r\n};\r\n\r\nconst getContrast = (i) => (imageArray[i] - getAverage(i / 4));\r\n\r\nconst Serialize = ({data, height, width}) => {\r\n    imageArray = new Uint8ClampedArray(data.length);\r\n    imageWidth = width;\r\n    imageHeight = height;\r\n\r\n    /* Make black & white */\r\n    for (let i = 0; i < data.length; i += 4) {\r\n        let avg = Math.round((data[i] + data[i + 1] + data[i + 2])/3);\r\n\r\n        imageArray[i] = avg;\r\n        imageArray[i + 1] = avg;\r\n        imageArray[i + 2] = avg;\r\n        imageArray[i + 3] = 255;\r\n    }\r\n\r\n    postMessage({\r\n        action: 'serialized',\r\n        pass: {\r\n            data: imageArray,\r\n            height: height,\r\n            width: width\r\n        }\r\n    });\r\n};\r\n\r\nconst Rectangulate = (points) => {\r\n    let newImage = new Uint8ClampedArray(imageArray.length);\r\n    newImage.set(imageArray);\r\n\r\n    for (let i = 0; i < newImage.length; i += 4) {\r\n        let x = (i % (4 * imageWidth)) / 4;\r\n        let y = (i - 4 * x) / imageWidth / 4;\r\n\r\n        if (!pointInPoly([x, y], points)) {\r\n            newImage[i] = 0;\r\n            newImage[i + 1] = 0;\r\n            newImage[i + 2] = 0;\r\n        }\r\n    }\r\n\r\n    postMessage({\r\n        action: 'rectangulated',\r\n        pass: {\r\n            data: newImage,\r\n            height: imageHeight,\r\n            width: imageWidth\r\n        }\r\n    });\r\n};\r\n\r\nconst DestroyAround = (i) => {\r\n    if (cellArray[i] === 1) {\r\n        cellArray[i] = 0;\r\n        if (cellArray[i - 1] === 1) {\r\n            DestroyAround(i - 1);\r\n        }\r\n        if (cellArray[i + 1] === 1) {\r\n            DestroyAround(i + 1);\r\n        }\r\n        if (cellArray[i - imageWidth] === 1) {\r\n            DestroyAround(i - imageWidth);\r\n        }\r\n        if (cellArray[i + imageWidth] === 1) {\r\n            DestroyAround(i + imageWidth);\r\n        }\r\n    }\r\n};\r\n\r\nconst Detect = (points) => {\r\n    calcAvgGray();\r\n\r\n    emitStatus(0.1);\r\n\r\n    cellArray = new Uint8Array(imageArray.length / 4);\r\n    let arrayCopy = new Uint8ClampedArray(imageArray.length);\r\n    arrayCopy.set(imageArray);\r\n\r\n    for (let i = 0; i < imageArray.length; i += 4) {\r\n        let x = (i % (4 * imageWidth)) / 4;\r\n        let y = (i - 4 * x) / imageWidth / 4;\r\n\r\n        if (i % 80000 === 0) emitStatus(0.4 * i / imageArray.length + 0.1);\r\n\r\n        if (pointInPoly([x, y], points) && getContrast(i) <= -1 * config.mCont) {\r\n            cellArray[i / 4] = 1;\r\n        } else {\r\n            cellArray[i / 4] = 0;\r\n        }\r\n    }\r\n\r\n    // Detect tube width in pixels\r\n\r\n    let sideLengths = points.map((p1, idx) => {\r\n        let p2 = idx === 3 ? points[0] : points[idx + 1];\r\n        return Math.pow(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2), 0.5);\r\n    });\r\n\r\n    let sideMargin = Math.round(sideLengths.reduce((a, b) => {\r\n        if (b < a) a = b;\r\n        return a;\r\n    }, sideLengths[0]) * config.wall);\r\n\r\n    for (let i in cellArray) {\r\n        let x = i % imageWidth;\r\n        let y = (i - x) / imageWidth;\r\n\r\n        if (i % 20000 === 0) emitStatus(0.375 * i / cellArray.length + 0.5);\r\n\r\n        if (\r\n            pointInPoly([x, y], points) && \r\n            (!pointInPoly([x, y + sideMargin], points)\r\n            || !pointInPoly([x, y - sideMargin], points)\r\n            || !pointInPoly([x - sideMargin, y], points)\r\n            || !pointInPoly([x + sideMargin, y], points))\r\n        ) {\r\n            DestroyAround(i);\r\n        }\r\n    }\r\n\r\n    for (let i in cellArray) {\r\n        if (i % 100000 === 0) emitStatus(0.125 * i / cellArray.length + 0.875);\r\n\r\n        if (cellArray[i] === 1) {\r\n            imageArray[i * 4] = 242;\r\n            imageArray[i * 4 + 1] = 46;\r\n            imageArray[i * 4 + 2] = 36;\r\n        }\r\n    }\r\n\r\n    postMessage({\r\n        action: 'detected',\r\n        pass: {\r\n            data: imageArray,\r\n            height: imageHeight,\r\n            width: imageWidth\r\n        }\r\n    });\r\n\r\n    imageArray.set(arrayCopy);\r\n};\r\n\r\nconst DiamondCoords = (i, distance) => {\r\n    let coords = [];\r\n    i = Number(i);\r\n    for (let o = -distance; o <= distance; o++) {\r\n        for (let u = -distance; u <= distance; u++) {\r\n            if (Math.abs(o) + Math.abs(u) <= distance) {\r\n                coords.push(i + o * imageWidth + u);\r\n            }\r\n        }\r\n    }\r\n    return coords;\r\n};\r\n\r\n// Calculates the maximum diamond\r\nconst MaxDiamond = (i, distance) => {\r\n    if (!distance) distance = 1;\r\n    i = Number(i);\r\n    let coords = DiamondCoords(i, distance);\r\n    //1 5 13 25 41\r\n    let internalPoints = 2 * Math.pow(distance, 2) - 2 * distance + 1;\r\n    let deltaPoints = 4 * distance;\r\n\r\n    let detectedPoints = 0;\r\n\r\n    for (let a in coords) {\r\n        if (typeof cellArray[coords[a]] === 'number' && cellArray[coords[a]] === 1) {\r\n            detectedPoints++;\r\n        }\r\n    }\r\n\r\n    if ((detectedPoints - internalPoints)/deltaPoints >= config.thresh) return MaxDiamond(i, distance + 1);\r\n    return distance;\r\n};\r\n\r\nconst DiamondCount = (points) => {\r\n    let count = 0;\r\n\r\n    let arrayCopy = new Uint8Array(cellArray.length);\r\n    arrayCopy.set(cellArray);\r\n    let arrayCopyTwo = new Uint8Array(imageArray.length);\r\n    arrayCopyTwo.set(imageArray);\r\n\r\n    for (let i in cellArray) {\r\n        i = Number(i);\r\n        if (cellArray[i] === 1) {\r\n            let distance = MaxDiamond(i, 1);\r\n            if (distance >= config.mDist) {\r\n                count++;\r\n                let coords = DiamondCoords(i, distance);\r\n                for (let o in coords) {\r\n                    cellArray[coords[o]] = 0;\r\n                }\r\n                imageArray[i*4] = 0;\r\n                imageArray[i*4 + 1] = 0;\r\n                imageArray[i*4 + 2] = 0;\r\n                imageArray[i*4 + 4] = 255;\r\n                imageArray[i*4 + 5] = 255;\r\n                imageArray[i*4 + 6] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    cellArray.set(arrayCopy);\r\n\r\n    postMessage({\r\n        action: 'counted',\r\n        pass: {\r\n            data: imageArray,\r\n            height: imageHeight,\r\n            width: imageWidth,\r\n            count\r\n        }\r\n    });\r\n\r\n    imageArray.set(arrayCopyTwo);\r\n};\r\n\r\nonmessage = ({data}) => {\r\n    console.log('Running action:', data.action);\r\n    try {\r\n        if (data.action === 'serialize') {\r\n            Serialize(data.pass);\r\n        } else if (data.action === 'rectangulate') {\r\n            Rectangulate(data.pass);\r\n        } else if (data.action === 'detect') {\r\n            Detect(data.pass);\r\n        } else if (data.action === 'count') {\r\n            DiamondCount(data.pass);\r\n        } else if (data.action === 'config') {\r\n            config = {...config, ...data.pass};\r\n            console.log('Config:', config);\r\n        } else if (data.action === 'copy') {\r\n            postMessage({\r\n                action: 'serialized',\r\n                pass: {\r\n                    data: imageArray,\r\n                    height: imageHeight,\r\n                    width: imageWidth\r\n                }\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.error(e);\r\n        emitStatus(0, true);\r\n    }\r\n    console.log('Finished action:', data.action);\r\n};","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}"],"sourceRoot":""}